# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.3"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Firebase App Distribution Beta"
  lane :beta do

        # Get the last version code and increment it.
        versionCode = File.read("metadata/versionCode").to_i
        versionCode = versionCode+1
    
        f = File.new("metadata/versionCode", "w")
        f.write(versionCode)
        f.close
    
        # Build the release version of the Android App
        gradle(
          task: "assembleRelease",
          build_type: "Release",
          project_dir: "android/",
          properties: { 'versionCode' => versionCode }
        )
    
    # gradle(task: "assembleRelease")
    #crashlytics

    firebase_app_distribution(
        app: "1:416732411627:android:4182945fb7d2a2b939b0ae",
        testers: "shamshudein.syedkareem@cognizant.com , manikandan.k34a613@cognizant.com", 
        groups: "ctsdevelopers, ctstesters",
        release_notes: "VCM Member Services Android App New Release",
        firebase_cli_path: "/usr/local/bin/firebase",
        firebase_cli_token: "1//0gha-Fvu6nePDCgYIARAAGBASNwF-L9IrkIRZJHOdiTUt1vClPdpBQOAvc_NXdUpSebB1y9Ho_4FA38BDEJjZ7UB45G2-KQonjao"
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer
